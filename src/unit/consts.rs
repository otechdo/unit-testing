pub mod unit {
    pub const IS_OK: &str = "The result match true";
    pub const SHOULD_BE_OK: &str = "The result match false and should be match true";
    pub const IS_KO: &str = "The result match false";
    pub const SHOULD_BE_KO: &str = "The result match true and should be match false";
    pub const IS_EQUALS: &str = "The values are equals";
    pub const SHOULD_BE_EQUALS: &str = "The values should be equals";
    pub const IS_UNEQUALS: &str = "The values are unequals";
    pub const SHOULD_BE_UNEQUALS: &str = "The values should be unequals";
    pub const IS_BETWEEN: &str = "The values are between the expected values";
    pub const SHOULD_BE_BETWEEN: &str = "The values sould be between the expected values";
    pub const IS_INFERIOR: &str = "The value are inferior to the expected value";
    pub const SHOULD_BE_INFERIOR: &str = "The value should be inferior to the expected value";
    pub const IS_SUPERIOR: &str = "The value are superior to the expected value";
    pub const SHOULD_BE_SUPERIOR: &str = "The value should be superior to the expected value";
    pub const IS_EMPTY: &str = "The value is empty";
    pub const IS_DIRECTORY: &str = "The directory exist";
    pub const IS_FILE: &str = "The file exist";
    pub const IS_FULL: &str = "The value is at this maximum value";
    pub const IS_PRIME: &str = "The value is a prime number";
    pub const IS_PAIR: &str = "The value is a pair number";
    pub const IS_START_WITH: &str = "The value start with the expected value";
    pub const IS_FINNISH_WITH: &str = "The value finnish with the expected value";
    pub const IS_IMPAIR: &str = "The value is not a pair number";
    pub const IS_CONTAINS: &str = "The value contains the expected value";
    pub const SHOULD_CONTAINS: &str = "The value should be contains the expected value";
    pub const IS_ABSOLUTE: &str = "The path is absolute";
    pub const IS_EXISTS: &str = "The path exists";
    pub const SHOULD_BE_EXIST: &str = "The path {} sould be exit";
    pub const IS_RELATIVE: &str = "The path is relative";
    pub const IS_SYMLINK: &str = "The path is a symlink";
    pub const IS_EXECUTABLE: &str = "The file is executable";
    pub const SHOULD_BE_EXECUTABLE: &str = "The file should be executable";
    pub const THEORY_IS_TRUE: &str = "The theory is true";
    pub const THEORY_SHOULD_BE_TRUE: &str = "The theory should be true";
    pub const THEORY_IS_FALSE: &str = "The theory is false";
    pub const THEORY_SHOULD_BE_FALSE: &str = "The theory should be false";
    pub const IS_NOT_EXECUTABLE: &str = "The file is not an executable";
    pub const SOULD_BE_NOT_EXECUTABLE: &str = "The file should be not an executable";
    pub const IS_NOT_SYMLINK: &str = "The path is a symlink";
    pub const IS_NOT_RELATIVE: &str = "The path is not relative";
    pub const IS_NOT_EXISTS: &str = "The path not exists";
    pub const SHOULD_NOT_EXISTS: &str = "The path should not exists";
    pub const IS_NOT_ABSOLUTE: &str = "The path is not absolute";
    pub const IS_NOT_FINNISH_WITH: &str = "The value don't finnish with the expected value";
    pub const IS_NOT_CONTAINS: &str = "The value not contains the expected value";
    pub const SHOULD_NOT_CONTAINS: &str = "The value should not contains the expected value";
    pub const IS_NOT_PRIME: &str = "The value is not a prime number";
    pub const IS_NOT_FULL: &str = "The value is not at this maximum value";
    pub const IS_NOT_FILE: &str = "The file not exist";
    pub const IS_NOT_DIRECTORY: &str = "The directory not exist";
    pub const IS_NOT_EMPTY: &str = "The value is not empty";
    pub const IS_NOT_BETWEEN: &str = "The values aren't between the expected values";
    pub const IS_NOT_START_WITH: &str = "The value no start with the expected value";
    pub const PROGRESS: u64 = 500;
    pub const NO_PROGRESS: u64 = 0;
}
